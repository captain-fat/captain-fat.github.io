<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>爬虫-get请求示例</title>
    <link href="/2020/02/19/%E7%88%AC%E8%99%AB-get%E8%AF%B7%E6%B1%82%E7%A4%BA%E4%BE%8B/"/>
    <url>/2020/02/19/%E7%88%AC%E8%99%AB-get%E8%AF%B7%E6%B1%82%E7%A4%BA%E4%BE%8B/</url>
    
    <content type="html"><![CDATA[<p>GET请求一般用于我们向服务器查询的过程，比如说，百度搜索“宁哥的小站”，如图所示，浏览器的url会跳转成如图所示</p><p><img src="/images/pasted-0.png" srcset="/img/loading.gif" alt="图像1"></p><p>在其中我们可以看到在”<a href="http://www.baidu.com/s?”" target="_blank" rel="noopener">http://www.baidu.com/s?”</a> 之后出现一个长长的字符串，其中就包含我们要查询的关键词。那么，我们在编程过程中，如何配置这段字符串参数呢？</p><p>在Chrome浏览器中，我们可以看到，请求的数据包含在请求头的Query String Parameters中，其实我们可以将这些字段都写在程序中，也可以摘取其中必要的部分，而不是全部。</p><p><img src="/images/pasted-1.png" srcset="/img/loading.gif" alt="图像2"></p><p>比较关键的是wd字段，这里我们只是把wd字段提取出来，写成词典，然后通过程序编码，配置成GET请求的url，再通过一般的程序抓取手段，可以得到我们查询的页面。程序如下：</p><p>  <strong><em>urllib有些用法变了，更新了下</em></strong></p><pre><code class="python">import urlliburl = &quot;http://www.baidu.com/s&quot;data = {    &#39;wd&#39;: &quot;测试&quot;}data = urllib.parse.urlencode(data) #编码工作，由dict转成stringfull_url = url + &#39;?&#39; + data #Get请求发送print(full_url)response = urllib.request.urlopen(full_url)print(response.read())</code></pre><p>转载请注明：宁哥的小站 » 3. 网络爬虫-GET请求示例</p>]]></content>
    
    
    <categories>
      
      <category>长知识</category>
      
    </categories>
    
    
    <tags>
      
      <tag>python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>巴意行</title>
    <link href="/2020/02/17/%E5%B7%B4%E6%84%8F%E8%A1%8C/"/>
    <url>/2020/02/17/%E5%B7%B4%E6%84%8F%E8%A1%8C/</url>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please.." data-whm="Sorry, wrong hash."><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="Hey, password is required here." /><label>Hey, password is required here.</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="3be2431fcdba7d480bcf762626301caf29037b7ec5530fb60df7d0c6e4e9e27b">f2fd406b5d28eb48ecc341e8ed8ec46e6fa5bb41eb4dbadcdaab53489ae1f1364f690a8268b6f97b0ddd89addfc744dd007a212c7d95604e89950e77b7f84df6</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>旅行</category>
      
    </categories>
    
    
    <tags>
      
      <tag>旅行</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>test</title>
    <link href="/2020/02/17/test/"/>
    <url>/2020/02/17/test/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2020/02/16/hello-world/"/>
    <url>/2020/02/16/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="bash">$ hexo new &quot;My New Post&quot;</code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
